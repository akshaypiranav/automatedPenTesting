import React, { useState, useEffect } from 'react';
import Layout from '../Components/Layout';

const Profile = () => {
  const [firstname, setFirstname] = useState('');
  const [lastname, setLastname] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  useEffect(() => {
    // Fetch profile data when the component mounts
    fetchProfileData();
  }, []);
  
  const fetchProfileData = async () => {
    try {
        // Retrieve email from localStorage
        const email = localStorage.getItem('user');

        // Check if email is present in localStorage
        if (!email) {
            throw new Error('Email not found in localStorage');
        }

        const response = await fetch('http://127.0.0.1:8000/profile/', {
            method: 'POST', // Use POST method to send email in the request body
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email }), // Send email in the request body
            credentials: 'same-origin',
            // Include if cookies are needed
        });

        if (!response.ok) {
            throw new Error('Failed to fetch profile data');
        }

        const responseData = await response.json();
        console.log(responseData);

        if (responseData.success) {
            const { name, lastname, email, password } = responseData;
            console.log(name, lastname, email, password);

            // Update state with profile values
            setFirstname(name);
            setLastname(lastname);
            setEmail(email);
            setPassword(password);

        } else {
            console.error('Error fetching profile data:', responseData.error);
            // Handle error
        }
    } catch (error) {
        console.error('Error fetching profile data:', error);
        // Handle error 
    }
};


const handleUpdate = async () => {
  try {
      const response = await fetch('http://127.0.0.1:8000/update/', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json',
          },
          body: JSON.stringify({
              email,
              password,
              firstname,
              lastname,
          }),
      });

      if (!response.ok) {
          throw new Error('Failed to update profile');
      }

      console.log('Profile updated successfully');
  } catch (error) {
      console.error('Error updating profile:', error);
      // Handle error 
  }
};

  const handleDelete = async () => {
    try {
      const response = await fetch('http://127.0.0.1:8000/delete/', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email,
        }),
      });

      if (!response.ok) {
        throw new Error('Failed to delete account');
      }

      console.log('Account deleted successfully');
      window.location.href = '/fpage';
    } catch (error) {
      console.error('Error deleting account:', error);
      // Handle error 
    }
  };

  return (
    <Layout>
      <div className="row justify-content-center">
        <div className="col-md-4">
          <div className="scancard mt-0" style={{ marginBottom: '20%' }}>
            <div className="scancard p-5 ">
              <h3 component="h1" variant="h5" className="mb-4" style={{ color: 'black' }}>
                Profile
              </h3>
              <div className="mb-3">
                <label htmlFor="firstname">First Name:</label>
                <input
                  type="text"
                  id="firstname"
                  value={firstname}
                  className="form-control form-control-lg"
                  onChange={(e) => setFirstname(e.target.value)}
                />
              </div>
              <div className="mb-3">
                <label htmlFor="lastname">Last Name:</label>
                <input
                  type="text"
                  id="lastname"
                  value={lastname}
                  className="form-control form-control-lg"
                  onChange={(e) => setLastname(e.target.value)}
                />
              </div>
              <div className="mb-3">
                <label htmlFor="email">Email:</label>
                <input
                  type="email"
                  id="email"
                  value={email}
                  className="form-control form-control-lg"
                  onChange={(e) => setEmail(e.target.value)}
                  readOnly
                />
              </div>
              <div className="mb-3">
                <label htmlFor="password">Password:</label>
                <input
                  type="password"
                  id="password"
                  value={password}
                  className="form-control form-control-lg"
                  onChange={(e) => setPassword(e.target.value)}
                  readOnly
                />
              </div>
              <div className="text-center mb-3">
                <button onClick={handleUpdate}
                  className="btnbg btn btn-primary btn-lg me-4">Update</button>

                <button onClick={handleDelete} 
                  className="btnbg btn btn-primary btn-lg">Delete Account</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </Layout>
  );
};

export default Profile;